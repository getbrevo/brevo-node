/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { GetInboundEmailEventsByUuidAttachmentsInner } from './getInboundEmailEventsByUuidAttachmentsInner';
import { GetInboundEmailEventsByUuidLogsInner } from './getInboundEmailEventsByUuidLogsInner';

export class GetInboundEmailEventsByUuid {
    /**
    * Date when email was received on SMTP relay
    */
    'receivedAt'?: Date;
    /**
    * Date when email was delivered successfully to client’s webhook
    */
    'deliveredAt'?: Date | null;
    /**
    * Recipient’s email address
    */
    'recipient'?: string;
    /**
    * Sender’s email address
    */
    'sender'?: string;
    /**
    * Value of the Message-ID header. This will be present only after the processing is done.
    */
    'messageId'?: string;
    /**
    * Value of the Subject header. This will be present only after the processing is done. 
    */
    'subject'?: string;
    /**
    * List of attachments of the email. This will be present only after the processing is done.
    */
    'attachments'?: Array<GetInboundEmailEventsByUuidAttachmentsInner>;
    /**
    * List of events/logs that describe the lifecycle of the email on SIB platform
    */
    'logs'?: Array<GetInboundEmailEventsByUuidLogsInner>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "receivedAt",
            "baseName": "receivedAt",
            "type": "Date"
        },
        {
            "name": "deliveredAt",
            "baseName": "deliveredAt",
            "type": "Date"
        },
        {
            "name": "recipient",
            "baseName": "recipient",
            "type": "string"
        },
        {
            "name": "sender",
            "baseName": "sender",
            "type": "string"
        },
        {
            "name": "messageId",
            "baseName": "messageId",
            "type": "string"
        },
        {
            "name": "subject",
            "baseName": "subject",
            "type": "string"
        },
        {
            "name": "attachments",
            "baseName": "attachments",
            "type": "Array<GetInboundEmailEventsByUuidAttachmentsInner>"
        },
        {
            "name": "logs",
            "baseName": "logs",
            "type": "Array<GetInboundEmailEventsByUuidLogsInner>"
        }    ];

    static getAttributeTypeMap() {
        return GetInboundEmailEventsByUuid.attributeTypeMap;
    }
}

