/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Payload for creating a new balance definition, specifying expiration rules, rounding strategies, and constraints.
*/
export class CreateBalanceDefinitionPayload {
    /**
    * Defines when the balance expires within the selected duration.
    */
    'balanceAvailabilityDurationModifier'?: CreateBalanceDefinitionPayload.BalanceAvailabilityDurationModifierEnum;
    /**
    * Unit of time for balance validity.
    */
    'balanceAvailabilityDurationUnit'?: CreateBalanceDefinitionPayload.BalanceAvailabilityDurationUnitEnum;
    /**
    * Number of time units before the balance expires.
    */
    'balanceAvailabilityDurationValue'?: number;
    /**
    * Fixed expiration date (`dd/mm` format) as an alternative to duration-based expiry.
    */
    'balanceExpirationDate'?: string;
    /**
    * Defines whether partial credit is allowed when reaching max balance.
    */
    'balanceOptionAmountOvertakingStrategy'?: CreateBalanceDefinitionPayload.BalanceOptionAmountOvertakingStrategyEnum;
    /**
    * Defines rounding strategy for credit transactions.
    */
    'balanceOptionCreditRounding'?: CreateBalanceDefinitionPayload.BalanceOptionCreditRoundingEnum;
    /**
    * Defines rounding strategy for debit transactions.
    */
    'balanceOptionDebitRounding'?: CreateBalanceDefinitionPayload.BalanceOptionDebitRoundingEnum;
    /**
    * Short description of the balance definition.
    */
    'description'?: string;
    /**
    * URL of an optional image reference.
    */
    'imageRef'?: string;
    /**
    * Maximum allowable balance amount.
    */
    'maxAmount'?: number;
    /**
    * Maximum credit allowed per operation.
    */
    'maxCreditAmountLimit'?: number;
    /**
    * Maximum debit allowed per operation.
    */
    'maxDebitAmountLimit'?: number;
    /**
    * Additional metadata for the balance definition.
    */
    'meta'?: object;
    /**
    * Minimum allowable balance amount.
    */
    'minAmount'?: number;
    /**
    * Name of the balance definition.
    */
    'name': string;
    /**
    * Unit of balance measurement.
    */
    'unit': CreateBalanceDefinitionPayload.UnitEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "balanceAvailabilityDurationModifier",
            "baseName": "balanceAvailabilityDurationModifier",
            "type": "CreateBalanceDefinitionPayload.BalanceAvailabilityDurationModifierEnum"
        },
        {
            "name": "balanceAvailabilityDurationUnit",
            "baseName": "balanceAvailabilityDurationUnit",
            "type": "CreateBalanceDefinitionPayload.BalanceAvailabilityDurationUnitEnum"
        },
        {
            "name": "balanceAvailabilityDurationValue",
            "baseName": "balanceAvailabilityDurationValue",
            "type": "number"
        },
        {
            "name": "balanceExpirationDate",
            "baseName": "balanceExpirationDate",
            "type": "string"
        },
        {
            "name": "balanceOptionAmountOvertakingStrategy",
            "baseName": "balanceOptionAmountOvertakingStrategy",
            "type": "CreateBalanceDefinitionPayload.BalanceOptionAmountOvertakingStrategyEnum"
        },
        {
            "name": "balanceOptionCreditRounding",
            "baseName": "balanceOptionCreditRounding",
            "type": "CreateBalanceDefinitionPayload.BalanceOptionCreditRoundingEnum"
        },
        {
            "name": "balanceOptionDebitRounding",
            "baseName": "balanceOptionDebitRounding",
            "type": "CreateBalanceDefinitionPayload.BalanceOptionDebitRoundingEnum"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "imageRef",
            "baseName": "imageRef",
            "type": "string"
        },
        {
            "name": "maxAmount",
            "baseName": "maxAmount",
            "type": "number"
        },
        {
            "name": "maxCreditAmountLimit",
            "baseName": "maxCreditAmountLimit",
            "type": "number"
        },
        {
            "name": "maxDebitAmountLimit",
            "baseName": "maxDebitAmountLimit",
            "type": "number"
        },
        {
            "name": "meta",
            "baseName": "meta",
            "type": "object"
        },
        {
            "name": "minAmount",
            "baseName": "minAmount",
            "type": "number"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "unit",
            "baseName": "unit",
            "type": "CreateBalanceDefinitionPayload.UnitEnum"
        }    ];

    static getAttributeTypeMap() {
        return CreateBalanceDefinitionPayload.attributeTypeMap;
    }
}

export namespace CreateBalanceDefinitionPayload {
    export enum BalanceAvailabilityDurationModifierEnum {
        NoModification = <any> 'noModification',
        StartOfPeriod = <any> 'startOfPeriod',
        EndOfPeriod = <any> 'endOfPeriod'
    }
    export enum BalanceAvailabilityDurationUnitEnum {
        Day = <any> 'day',
        Week = <any> 'week',
        Month = <any> 'month',
        Year = <any> 'year'
    }
    export enum BalanceOptionAmountOvertakingStrategyEnum {
        Strict = <any> 'strict',
        Partial = <any> 'partial'
    }
    export enum BalanceOptionCreditRoundingEnum {
        Lower = <any> 'lower',
        Upper = <any> 'upper',
        Natural = <any> 'natural'
    }
    export enum BalanceOptionDebitRoundingEnum {
        Lower = <any> 'lower',
        Upper = <any> 'upper',
        Natural = <any> 'natural'
    }
    export enum UnitEnum {
        Points = <any> 'POINTS',
        Eur = <any> 'EUR',
        Usd = <any> 'USD',
        Mxn = <any> 'MXN',
        Gbp = <any> 'GBP',
        Inr = <any> 'INR',
        Cad = <any> 'CAD',
        Sgd = <any> 'SGD',
        Ron = <any> 'RON',
        Jpy = <any> 'JPY',
        Myr = <any> 'MYR',
        Clp = <any> 'CLP',
        Pen = <any> 'PEN',
        Mad = <any> 'MAD',
        Aud = <any> 'AUD',
        Chf = <any> 'CHF',
        Brl = <any> 'BRL'
    }
}
