/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Payload for updating an existing balance limit, specifying constraints on transactions or amounts.
*/
export class UpdateBalanceLimitPayload {
    /**
    * Defines whether the limit applies to transaction count or amount.
    */
    'constraintType': UpdateBalanceLimitPayload.ConstraintTypeEnum;
    /**
    * Unit of time for which the limit is applicable.
    */
    'durationUnit': UpdateBalanceLimitPayload.DurationUnitEnum;
    /**
    * Number of time units for the balance limit.
    */
    'durationValue': number;
    /**
    * Determines if the limit resets on a rolling schedule.
    */
    'slidingSchedule'?: boolean;
    /**
    * Specifies whether the limit applies to credit or debit transactions.
    */
    'transactionType': UpdateBalanceLimitPayload.TransactionTypeEnum;
    /**
    * Maximum allowed value for the specified constraint type.
    */
    'value': number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "constraintType",
            "baseName": "constraintType",
            "type": "UpdateBalanceLimitPayload.ConstraintTypeEnum"
        },
        {
            "name": "durationUnit",
            "baseName": "durationUnit",
            "type": "UpdateBalanceLimitPayload.DurationUnitEnum"
        },
        {
            "name": "durationValue",
            "baseName": "durationValue",
            "type": "number"
        },
        {
            "name": "slidingSchedule",
            "baseName": "slidingSchedule",
            "type": "boolean"
        },
        {
            "name": "transactionType",
            "baseName": "transactionType",
            "type": "UpdateBalanceLimitPayload.TransactionTypeEnum"
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return UpdateBalanceLimitPayload.attributeTypeMap;
    }
}

export namespace UpdateBalanceLimitPayload {
    export enum ConstraintTypeEnum {
        Transaction = <any> 'transaction',
        Amount = <any> 'amount'
    }
    export enum DurationUnitEnum {
        Day = <any> 'day',
        Week = <any> 'week',
        Month = <any> 'month',
        Year = <any> 'year'
    }
    export enum TransactionTypeEnum {
        Credit = <any> 'credit',
        Debit = <any> 'debit'
    }
}
