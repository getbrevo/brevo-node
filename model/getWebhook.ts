/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class GetWebhook {
    /**
    * URL of the webhook
    */
    'url': string;
    /**
    * ID of the webhook
    */
    'id': number;
    /**
    * Description of the webhook
    */
    'description': string;
    'events': Array<string>;
    /**
    * Type of webhook (marketing or transactional)
    */
    'type': GetWebhook.TypeEnum;
    /**
    * channel of webhook
    */
    'channel'?: GetWebhook.ChannelEnum = GetWebhook.ChannelEnum.Email;
    /**
    * Creation UTC date-time of the webhook (YYYY-MM-DDTHH:mm:ss.SSSZ)
    */
    'createdAt': string;
    /**
    * Last modification UTC date-time of the webhook (YYYY-MM-DDTHH:mm:ss.SSSZ)
    */
    'modifiedAt': string;
    /**
    * Batching configuration of the webhook, we send batched webhooks if its true
    */
    'batched'?: boolean;
    /**
    * Authentication header to be send with the webhook requests
    */
    'auth'?: object;
    'headers'?: Array<object>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "events",
            "baseName": "events",
            "type": "Array<string>"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "GetWebhook.TypeEnum"
        },
        {
            "name": "channel",
            "baseName": "channel",
            "type": "GetWebhook.ChannelEnum"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "string"
        },
        {
            "name": "modifiedAt",
            "baseName": "modifiedAt",
            "type": "string"
        },
        {
            "name": "batched",
            "baseName": "batched",
            "type": "boolean"
        },
        {
            "name": "auth",
            "baseName": "auth",
            "type": "object"
        },
        {
            "name": "headers",
            "baseName": "headers",
            "type": "Array<object>"
        }    ];

    static getAttributeTypeMap() {
        return GetWebhook.attributeTypeMap;
    }
}

export namespace GetWebhook {
    export enum TypeEnum {
        Marketing = <any> 'marketing',
        Transactional = <any> 'transactional'
    }
    export enum ChannelEnum {
        Sms = <any> 'sms',
        Email = <any> 'email'
    }
}
