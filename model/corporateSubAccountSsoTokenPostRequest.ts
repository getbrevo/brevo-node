/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class CorporateSubAccountSsoTokenPostRequest {
    /**
    * Id of the sub-account organization
    */
    'id': number;
    /**
    * User email of sub-account organization
    */
    'email'?: string;
    /**
    * **Set target after login success** * **automation** - Redirect to Automation after login * **email_campaign** - Redirect to Email Campaign after login * **contacts** - Redirect to Contacts after login * **landing_pages** - Redirect to Landing Pages after login * **email_transactional** - Redirect to Email Transactional after login * **senders** - Redirect to Senders after login * **sms_campaign** - Redirect to Sms Campaign after login * **sms_transactional** - Redirect to Sms Transactional after login 
    */
    'target'?: CorporateSubAccountSsoTokenPostRequest.TargetEnum;
    /**
    * Set the full target URL after login success. The user will land directly on this target URL after login
    */
    'url'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "target",
            "baseName": "target",
            "type": "CorporateSubAccountSsoTokenPostRequest.TargetEnum"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return CorporateSubAccountSsoTokenPostRequest.attributeTypeMap;
    }
}

export namespace CorporateSubAccountSsoTokenPostRequest {
    export enum TargetEnum {
        Automation = <any> 'automation',
        EmailCampaign = <any> 'email_campaign',
        Contacts = <any> 'contacts',
        LandingPages = <any> 'landing_pages',
        EmailTransactional = <any> 'email_transactional',
        Senders = <any> 'senders',
        SmsCampaign = <any> 'sms_campaign',
        SmsTransactional = <any> 'sms_transactional'
    }
}
