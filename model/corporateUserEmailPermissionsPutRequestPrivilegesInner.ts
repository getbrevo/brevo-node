/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Permission on features
*/
export class CorporateUserEmailPermissionsPutRequestPrivilegesInner {
    /**
    * feature name
    */
    'feature'?: CorporateUserEmailPermissionsPutRequestPrivilegesInner.FeatureEnum;
    /**
    * Permission for the feature
    */
    'permissions'?: Array<CorporateUserEmailPermissionsPutRequestPrivilegesInner.PermissionsEnum>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "feature",
            "baseName": "feature",
            "type": "CorporateUserEmailPermissionsPutRequestPrivilegesInner.FeatureEnum"
        },
        {
            "name": "permissions",
            "baseName": "permissions",
            "type": "Array<CorporateUserEmailPermissionsPutRequestPrivilegesInner.PermissionsEnum>"
        }    ];

    static getAttributeTypeMap() {
        return CorporateUserEmailPermissionsPutRequestPrivilegesInner.attributeTypeMap;
    }
}

export namespace CorporateUserEmailPermissionsPutRequestPrivilegesInner {
    export enum FeatureEnum {
        UserManagement = <any> 'user_management',
        Api = <any> 'api',
        MyPlan = <any> 'my_plan',
        AppsManagement = <any> 'apps_management',
        Analytics = <any> 'analytics',
        SubOrganizationGroups = <any> 'sub_organization_groups',
        CreateSubOrganizations = <any> 'create_sub_organizations',
        ManageSubOrganizations = <any> 'manage_sub_organizations',
        Security = <any> 'security'
    }
    export enum PermissionsEnum {
        All = <any> 'all',
        None = <any> 'none',
        Create = <any> 'create',
        EditDelete = <any> 'edit_delete',
        CreateAlerts = <any> 'create_alerts',
        DownloadData = <any> 'download_data',
        MyLooks = <any> 'my_looks',
        ExploreCreate = <any> 'explore_create'
    }
}
