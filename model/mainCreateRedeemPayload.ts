/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { MainOrderPayload } from './mainOrderPayload';

export class MainCreateRedeemPayload {
    /**
    * Unique identifier for the attributed reward
    */
    'attributedRewardId'?: string;
    /**
    * Redemption code for the reward
    */
    'code'?: string;
    /**
    * Unique identifier for the contact
    */
    'contactId'?: number;
    /**
    * Identifier for the loyalty subscription
    */
    'loyaltySubscriptionId'?: string;
    /**
    * Additional metadata associated with the redeem request
    */
    'meta'?: { [key: string]: any; };
    /**
    * Order details for the redemption
    */
    'order'?: MainOrderPayload;
    /**
    * Unique identifier for the reward
    */
    'rewardId'?: string;
    /**
    * Time to live in seconds for the redemption request
    */
    'ttl'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "attributedRewardId",
            "baseName": "attributedRewardId",
            "type": "string"
        },
        {
            "name": "code",
            "baseName": "code",
            "type": "string"
        },
        {
            "name": "contactId",
            "baseName": "contactId",
            "type": "number"
        },
        {
            "name": "loyaltySubscriptionId",
            "baseName": "loyaltySubscriptionId",
            "type": "string"
        },
        {
            "name": "meta",
            "baseName": "meta",
            "type": "{ [key: string]: any; }"
        },
        {
            "name": "order",
            "baseName": "order",
            "type": "MainOrderPayload"
        },
        {
            "name": "rewardId",
            "baseName": "rewardId",
            "type": "string"
        },
        {
            "name": "ttl",
            "baseName": "ttl",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return MainCreateRedeemPayload.attributeTypeMap;
    }
}

