/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class UpdateTierGroupRequest {
    /**
    * Name of the tier group
    */
    'name': string;
    /**
    * Order of the tiers in the group in ascending order
    */
    'tierOrder': Array<string>;
    /**
    * Select real_time to upgrade tier on real time balance updates. Select membership_anniversary to upgrade tier on subscription anniversary. Select tier_anniversary to upgrade tier on tier anniversary.
    */
    'upgradeStrategy': UpdateTierGroupRequest.UpgradeStrategyEnum = UpdateTierGroupRequest.UpgradeStrategyEnum.RealTime;
    /**
    * Select real_time to downgrade tier on real time balance updates. Select membership_anniversary to downgrade tier on subscription anniversary. Select tier_anniversary to downgrade tier on tier anniversary.
    */
    'downgradeStrategy': UpdateTierGroupRequest.DowngradeStrategyEnum = UpdateTierGroupRequest.DowngradeStrategyEnum.RealTime;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "tierOrder",
            "baseName": "tierOrder",
            "type": "Array<string>"
        },
        {
            "name": "upgradeStrategy",
            "baseName": "upgradeStrategy",
            "type": "UpdateTierGroupRequest.UpgradeStrategyEnum"
        },
        {
            "name": "downgradeStrategy",
            "baseName": "downgradeStrategy",
            "type": "UpdateTierGroupRequest.DowngradeStrategyEnum"
        }    ];

    static getAttributeTypeMap() {
        return UpdateTierGroupRequest.attributeTypeMap;
    }
}

export namespace UpdateTierGroupRequest {
    export enum UpgradeStrategyEnum {
        RealTime = <any> 'real_time',
        MembershipAnniversary = <any> 'membership_anniversary',
        TierAnniversary = <any> 'tier_anniversary'
    }
    export enum DowngradeStrategyEnum {
        RealTime = <any> 'real_time',
        MembershipAnniversary = <any> 'membership_anniversary',
        TierAnniversary = <any> 'tier_anniversary'
    }
}
