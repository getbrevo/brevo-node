/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class GetProductDetails {
    /**
    * Product ID for which you requested the details
    */
    'id': string;
    /**
    * Name of the product for which you requested the details
    */
    'name': string;
    /**
    * Creation UTC date-time of the product (YYYY-MM-DDTHH:mm:ss.SSSZ)
    */
    'createdAt': string;
    /**
    * Last modification UTC date-time of the product (YYYY-MM-DDTHH:mm:ss.SSSZ)
    */
    'modifiedAt': string;
    /**
    * URL to the product
    */
    'url'?: string;
    /**
    * Absolute URL to the cover image of the product
    */
    'imageUrl'?: string;
    /**
    * Product identifier from the shop
    */
    'sku'?: string;
    /**
    * Price of the product
    */
    'price'?: number;
    /**
    * Category ID-s of the product
    */
    'categories'?: Array<string>;
    /**
    * Parent product id of the product
    */
    'parentId'?: string;
    /**
    * S3 url of original image
    */
    's3Original'?: string;
    /**
    * S3 thumbnail url of original image in 120x120 dimension for analytics section
    */
    's3ThumbAnalytics': string;
    /**
    * S3 thumbnail url of original image in 600x400 dimension for editor section
    */
    's3ThumbEditor': string;
    /**
    * Meta data of product such as description, vendor, producer, stock level, etc.
    */
    'metaInfo'?: object;
    /**
    * product deleted from the shop\'s database
    */
    'isDeleted'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "string"
        },
        {
            "name": "modifiedAt",
            "baseName": "modifiedAt",
            "type": "string"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "imageUrl",
            "baseName": "imageUrl",
            "type": "string"
        },
        {
            "name": "sku",
            "baseName": "sku",
            "type": "string"
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number"
        },
        {
            "name": "categories",
            "baseName": "categories",
            "type": "Array<string>"
        },
        {
            "name": "parentId",
            "baseName": "parentId",
            "type": "string"
        },
        {
            "name": "s3Original",
            "baseName": "s3Original",
            "type": "string"
        },
        {
            "name": "s3ThumbAnalytics",
            "baseName": "s3ThumbAnalytics",
            "type": "string"
        },
        {
            "name": "s3ThumbEditor",
            "baseName": "s3ThumbEditor",
            "type": "string"
        },
        {
            "name": "metaInfo",
            "baseName": "metaInfo",
            "type": "object"
        },
        {
            "name": "isDeleted",
            "baseName": "isDeleted",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return GetProductDetails.attributeTypeMap;
    }
}

