/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Represents a transaction involving a balance, including status and timestamps.
*/
export class Transaction {
    /**
    * The transaction amount.
    */
    'amount'?: number;
    /**
    * Unique identifier (UUID) of the associated balance definition.
    */
    'balanceDefinitionId'?: string;
    /**
    * Timestamp when the transaction was canceled (nullable).
    */
    'cancelledAt'?: string;
    /**
    * Timestamp when the transaction was completed (nullable).
    */
    'completedAt'?: string;
    /**
    * Unique identifier of the contact associated with the transaction.
    */
    'contactId'?: number;
    /**
    * Timestamp when the transaction was created.
    */
    'createdAt'?: string;
    /**
    * Optional timestamp indicating when the transaction event occurred.
    */
    'eventTime'?: string;
    /**
    * Expiry date of the transaction (nullable).
    */
    'expirationDate'?: string;
    /**
    * Unique identifier (UUID) of the transaction.
    */
    'id'?: string;
    /**
    * Unique identifier (UUID) of the associated loyalty program.
    */
    'loyaltyProgramId'?: string;
    /**
    * Optional metadata associated with the transaction.
    */
    'meta'?: { [key: string]: any; };
    /**
    * Reason for rejection if the transaction was declined (nullable).
    */
    'rejectReason'?: string;
    /**
    * Timestamp when the transaction was rejected (nullable).
    */
    'rejectedAt'?: string;
    /**
    * The current status of the transaction (e.g., pending, completed, rejected).
    */
    'status'?: string;
    /**
    * Timestamp when the transaction was last updated.
    */
    'updatedAt'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number"
        },
        {
            "name": "balanceDefinitionId",
            "baseName": "balanceDefinitionId",
            "type": "string"
        },
        {
            "name": "cancelledAt",
            "baseName": "cancelledAt",
            "type": "string"
        },
        {
            "name": "completedAt",
            "baseName": "completedAt",
            "type": "string"
        },
        {
            "name": "contactId",
            "baseName": "contactId",
            "type": "number"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "string"
        },
        {
            "name": "eventTime",
            "baseName": "eventTime",
            "type": "string"
        },
        {
            "name": "expirationDate",
            "baseName": "expirationDate",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "loyaltyProgramId",
            "baseName": "loyaltyProgramId",
            "type": "string"
        },
        {
            "name": "meta",
            "baseName": "meta",
            "type": "{ [key: string]: any; }"
        },
        {
            "name": "rejectReason",
            "baseName": "rejectReason",
            "type": "string"
        },
        {
            "name": "rejectedAt",
            "baseName": "rejectedAt",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Transaction.attributeTypeMap;
    }
}

