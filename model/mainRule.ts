/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { MainRuleConditionResponse } from './mainRuleConditionResponse';
import { MainRuleEventResponse } from './mainRuleEventResponse';
import { MainRuleResultResponse } from './mainRuleResultResponse';

export class MainRule {
    /**
    * Selected rule condition
    */
    'condition'?: MainRuleConditionResponse;
    /**
    * Timestamp when the rule was created
    */
    'createdAt'?: string;
    /**
    * Description of the rule
    */
    'description'?: string;
    /**
    * Selected event in the rule
    */
    'event'?: MainRuleEventResponse;
    /**
    * Metric to identify if it\'s an internal rule or not
    */
    'isInternal'?: boolean;
    /**
    * Loyalty Program id to which current rule is associated
    */
    'loyaltyProgramId'?: string;
    /**
    * Loyalty Version id to which current rule is associated
    */
    'loyaltyVersionId'?: number;
    /**
    * Additional data to define the rule
    */
    'meta'?: { [key: string]: any; };
    /**
    * Rule name
    */
    'name'?: string;
    /**
    * Results of the rule definition
    */
    'results'?: Array<MainRuleResultResponse>;
    /**
    * Unique identifier for the rule
    */
    'ruleId'?: string;
    /**
    * Type of the rule
    */
    'ruleType'?: string;
    /**
    * Timestamp when the rule was updated
    */
    'updatedAt'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "condition",
            "baseName": "condition",
            "type": "MainRuleConditionResponse"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "event",
            "baseName": "event",
            "type": "MainRuleEventResponse"
        },
        {
            "name": "isInternal",
            "baseName": "isInternal",
            "type": "boolean"
        },
        {
            "name": "loyaltyProgramId",
            "baseName": "loyaltyProgramId",
            "type": "string"
        },
        {
            "name": "loyaltyVersionId",
            "baseName": "loyaltyVersionId",
            "type": "number"
        },
        {
            "name": "meta",
            "baseName": "meta",
            "type": "{ [key: string]: any; }"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "results",
            "baseName": "results",
            "type": "Array<MainRuleResultResponse>"
        },
        {
            "name": "ruleId",
            "baseName": "ruleId",
            "type": "string"
        },
        {
            "name": "ruleType",
            "baseName": "ruleType",
            "type": "string"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return MainRule.attributeTypeMap;
    }
}

