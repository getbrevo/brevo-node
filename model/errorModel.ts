/**
 * Brevo API
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class ErrorModel {
    /**
    * Error code displayed in case of a failure
    */
    'code': ErrorModel.CodeEnum;
    /**
    * Readable message associated to the failure
    */
    'message': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "code",
            "baseName": "code",
            "type": "ErrorModel.CodeEnum"
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ErrorModel.attributeTypeMap;
    }
}

export namespace ErrorModel {
    export enum CodeEnum {
        InvalidParameter = <any> 'invalid_parameter',
        MissingParameter = <any> 'missing_parameter',
        OutOfRange = <any> 'out_of_range',
        CampaignProcessing = <any> 'campaign_processing',
        CampaignSent = <any> 'campaign_sent',
        DocumentNotFound = <any> 'document_not_found',
        ResellerPermissionDenied = <any> 'reseller_permission_denied',
        NotEnoughCredits = <any> 'not_enough_credits',
        PermissionDenied = <any> 'permission_denied',
        DuplicateParameter = <any> 'duplicate_parameter',
        DuplicateRequest = <any> 'duplicate_request',
        MethodNotAllowed = <any> 'method_not_allowed',
        Unauthorized = <any> 'unauthorized',
        AccountUnderValidation = <any> 'account_under_validation',
        NotAcceptable = <any> 'not_acceptable',
        BadRequest = <any> 'bad_request',
        UnprocessableEntity = <any> 'unprocessable_entity'
    }
}
